// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SODbLoadV2;

namespace SODbLoadV2.Migrations
{
    [DbContext(typeof(BasicModelContext))]
    [Migration("20190624093839_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview6.19304.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SODbLoadV2.Answer", b =>
                {
                    b.Property<int>("answer_id");

                    b.Property<int?>("Itemquestion_id");

                    b.Property<string>("body");

                    b.Property<int>("comment_count");

                    b.Property<int>("creation_date");

                    b.Property<bool>("is_accepted");

                    b.Property<int>("last_activity_date");

                    b.Property<int?>("last_edit_date");

                    b.Property<int?>("owneruser_id");

                    b.Property<int>("question_id");

                    b.Property<int>("score");

                    b.HasKey("answer_id");

                    b.HasIndex("Itemquestion_id");

                    b.HasIndex("owneruser_id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("SODbLoadV2.Comment", b =>
                {
                    b.Property<int>("comment_id");

                    b.Property<int?>("Itemquestion_id");

                    b.Property<int?>("answer_id");

                    b.Property<int>("creation_date");

                    b.Property<bool>("edited");

                    b.Property<int?>("owneruser_id");

                    b.Property<int>("post_id");

                    b.Property<int>("score");

                    b.HasKey("comment_id");

                    b.HasIndex("Itemquestion_id");

                    b.HasIndex("answer_id");

                    b.HasIndex("owneruser_id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("SODbLoadV2.Item", b =>
                {
                    b.Property<int>("question_id");

                    b.Property<int?>("accepted_answer_id");

                    b.Property<int>("answer_count");

                    b.Property<int>("comment_count");

                    b.Property<int>("creation_date");

                    b.Property<bool>("is_answered");

                    b.Property<int>("last_activity_date");

                    b.Property<int?>("last_edit_date");

                    b.Property<string>("link");

                    b.Property<int?>("owneruser_id");

                    b.Property<int>("score");

                    b.Property<string>("tags");

                    b.Property<string>("title");

                    b.Property<int>("view_count");

                    b.HasKey("question_id");

                    b.HasIndex("owneruser_id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SODbLoadV2.Owner", b =>
                {
                    b.Property<int>("user_id");

                    b.Property<int>("accept_rate");

                    b.Property<string>("display_name");

                    b.Property<string>("link");

                    b.Property<string>("profile_image");

                    b.Property<int>("reputation");

                    b.Property<string>("user_type");

                    b.HasKey("user_id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("SODbLoadV2.Answer", b =>
                {
                    b.HasOne("SODbLoadV2.Item", null)
                        .WithMany("answers")
                        .HasForeignKey("Itemquestion_id");

                    b.HasOne("SODbLoadV2.Owner", "owner")
                        .WithMany()
                        .HasForeignKey("owneruser_id");
                });

            modelBuilder.Entity("SODbLoadV2.Comment", b =>
                {
                    b.HasOne("SODbLoadV2.Item", null)
                        .WithMany("comments")
                        .HasForeignKey("Itemquestion_id");

                    b.HasOne("SODbLoadV2.Answer", null)
                        .WithMany("comments")
                        .HasForeignKey("answer_id");

                    b.HasOne("SODbLoadV2.Owner", "owner")
                        .WithMany()
                        .HasForeignKey("owneruser_id");
                });

            modelBuilder.Entity("SODbLoadV2.Item", b =>
                {
                    b.HasOne("SODbLoadV2.Owner", "owner")
                        .WithMany()
                        .HasForeignKey("owneruser_id");
                });
#pragma warning restore 612, 618
        }
    }
}
